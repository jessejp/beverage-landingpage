---
import Slide from "../components/Slide.astro";

const slides = [
  {
    name: "Slide 1",
    color: "#ffff00",
    image: "https://placedog.net/450/600?id=1",
  },
  {
    name: "Slide 2",
    color: "#0000ff",
    image: "https://placedog.net/450/600?id=2",
  },
  {
    name: "Slide 3",
    color: "#ffff00",
    image: "https://placedog.net/450/600?id=3",
  },
  {
    name: "Slide 4",
    color: "#0000ff",
    image: "https://placedog.net/450/600?id=4",
  },
  {
    name: "Slide 5",
    color: "#ffff00",
    image: "https://placedog.net/450/600?id=5",
  },
  {
    name: "Slide 6",
    color: "#0000ff",
    image: "https://placedog.net/450/600?id=6",
  },
];
const slidesAmount = slides.length;
---

<section class="center interlude">
  <div class="carousel-wrapper">
    <div class="slide-button-container prev">
      <button>←</button>
    </div>
    <div class="carousel">
      {slides.map((slide) => <Slide {...slide} />)}
    </div>
    <div class="slide-button-container next">
      <button>→</button>
    </div>
  </div>

  <style>
    .carousel-wrapper {
      position: relative;
      display: flex;
      flex-direction: row;
      width: 100%;
      justify-content: space-evenly;
      background: #fff;
    }

    .slide-button-container {
      width: 10vw;
      background: inherit;
      position: absolute;
      height: 32em;
      z-index: 1;
    }

    .slide-button-container.prev {
      left: 0;
    }
    .slide-button-container.next {
      right: 0;
    }

    .carousel {
      display: flex;
      transition: transform 0.2s ease;
      width: 80vw;
      height: 32em;
    }
  </style>

  <script>
    const carousel: HTMLElement = document.querySelector(".carousel");
    let isDragging = false;
    let startPos = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;

    carousel.addEventListener("mousedown", dragStart);
    carousel.addEventListener("touchstart", dragStart);
    carousel.addEventListener("mouseup", dragEnd);
    carousel.addEventListener("touchend", dragEnd);
    carousel.addEventListener("mousemove", drag);
    carousel.addEventListener("touchmove", drag);

    function dragStart(event) {
      if (event.type === "touchstart") {
        startPos = event.touches[0].clientX;
      } else {
        startPos = event.clientX;
        document.body.style.cursor = "grabbing";
      }
      isDragging = true;
      prevTranslate = currentTranslate;
    }

    function drag(event) {
      if (isDragging) {
        let currentPosition = 0;
        if (event.type === "touchmove") {
          currentPosition = event.touches[0].clientX;
        } else {
          currentPosition = event.clientX;
        }
        const diff = currentPosition - startPos;
        currentTranslate = prevTranslate + diff;
        snapToSlide();
      }
    }

    function dragEnd() {
      isDragging = false;
      document.body.style.cursor = "grab";
    }

    function snapToSlide() {
      const slideWidth: HTMLElement = carousel.querySelector(".slide");
      const slideWidthOffset = slideWidth.offsetWidth;

      const slidesAmount = carousel.querySelectorAll(".slide").length;
      // Division by 1 returns too large of a value, so we divide by half of 3
      const breakPoint = carousel.offsetWidth === slideWidthOffset ? 1.5 : 3;
      const minRange = 0;
      const maxRange =
        (-slideWidthOffset * slidesAmount) / breakPoint - slideWidthOffset;

      const newPosition =
        Math.round(currentTranslate / slideWidthOffset) * slideWidthOffset;

      if (newPosition > minRange) {
        currentTranslate = minRange;
      } else if (newPosition < maxRange) {
        currentTranslate = maxRange;
      } else {
        currentTranslate = newPosition;
      }

      carousel.style.transform = `translateX(${currentTranslate}px)`;
    }

    carousel.addEventListener("transitionend", snapToSlide);
    window.addEventListener("resize", snapToSlide);

    // Optional: Auto-rotate slides every 3 seconds
    // setInterval(nextSlide, 3000);
  </script>
</section>
