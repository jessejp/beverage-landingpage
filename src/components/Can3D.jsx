/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const modelPath = "/assets/can_v3.glb";

const Can3D = (props) => {
  const group = useRef();
  const canGroup = useRef();
  const { nodes, materials, animations } = useGLTF(modelPath);
  const { actions } = useAnimations(animations, group);

  useFrame((state, delta) => {
    const elapsedTime = state.clock.getElapsedTime();
    canGroup.current.rotation.y = Math.sin(elapsedTime * 0.6) * 0.8 - 0.3;
    canGroup.current.rotation.x = Math.sin(elapsedTime * 2) * 0.1;
    // canGroup.current.position.z = Math.sin(elapsedTime*0.6) * 0.3;
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CanV3" position={[0, 0, 0]} ref={canGroup}>
          <mesh
            name="CanV3"
            geometry={nodes.CanV3.geometry}
            material={materials.can}
          />
        </group>
      </group>
    </group>
  );
};

useGLTF.preload(modelPath);

export default Can3D;
